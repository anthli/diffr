buildscript {
  ext.kotlinVersion = "1.3.71"
  ext.junitVersion = "5.6.1"
  // Override the JUnit Jupiter version coming from Spring Boot
  ext["junit-jupiter.version"] = "$junitVersion"
}

plugins {
  id "io.spring.dependency-management" version "1.0.9.RELEASE"
  id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
  id "org.jetbrains.kotlin.plugin.serialization" version "$kotlinVersion"
  id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
  id "org.springframework.boot" version "2.2.6.RELEASE"
}

version "0.0.1"

test {
  useJUnitPlatform()

  testLogging {
    events = ["passed", "skipped", "failed"]

    // Uncomment this to show standard out and error when running tests
    // showStandardStreams = true

    // Always show test output even if nothing changed
    outputs.upToDateWhen {
      false
    }
  }
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-reflect"
  implementation "org.jetbrains.kotlin:kotlin-stdlib"
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
  implementation "org.springframework.boot:spring-boot-starter-web"

  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  testImplementation("org.springframework.boot:spring-boot-starter-test") {
    exclude group: "org.junit.vintage", module: "junit-vintage-engine"
  }

  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}